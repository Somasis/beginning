#!/bin/bash

net-interfaces_exists() {
    case "${BEGINNING_PLATFORM}" in
        Linux)
            if prog_exists ip;then
                NET_INTERFACES_USE=ip
            elif prog_exists ifconfig;then
                NET_INTERFACES_USE=ifconfig
            else
                status FAILURE "${daemon}: neither \`ifconfig\` nor \`ip\` is installed"
                return 1
            fi
        ;;
        *)
            status FAILURE "${daemon}: support for your OS (${BEGINNING_PLATFORM}) needs to be added"
            return 1
        ;;
    esac
}

net-interfaces_up() {
    case "${NET_INTERFACES_USE}" in
        ip) ip link set dev "$1" up >/dev/null 2>&1 ;;
        ifconfig) ifconfig "$1" up >/dev/null 2>&1 ;;
    esac
    return $?
}

net-interfaces_down() {
    case "${NET_INTERFACES_USE}" in
        ip) ip link set dev "$1" down >/dev/null 2>&1 ;;
        ifconfig) ifconfig "$1" down >/dev/null 2>&1 ;;
    esac
    return $?
}

net-interfaces_interface_status() {
    local status=$(</sys/class/net/"$1"/carrier)
    case "${status}" in
        0) return 1 ;; # down
        1) return 0 ;; # up
    esac
}

net-interfaces_start() {
    local interface
    for interface in "${NET_INTERFACES[@]}";do
        if ! net-interfaces_up "$interface";then
            status FAILURE "${daemon}: failed to up ${interface}"
            return 1
        fi
    done
}

net-interfaces_stop() {
    local interface
    for interface in "${NET_INTERFACES[@]}";do
        if ! net-interfaces_down "$interface";then
            status FAILURE "${daemon}: failed to down ${interface}"
            return 1
        fi
    done
}

net-interfaces_status() {
    for interface in "${NET_INTERFACES[@]}";do
        if net-interfaces_interface_status "$interface";then
            continue
        else
            return 1
        fi
    done
    return 0
}
